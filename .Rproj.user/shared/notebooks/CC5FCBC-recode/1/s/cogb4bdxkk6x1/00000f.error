{"frames":[{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"cnlp_annotate(df, text_name = \"explication\", doc_name = \"id\", \n    verbose = 1000)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"annotate_with_udpipe(input, verbose)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"as.data.frame(udpipe::udpipe_annotate(object = volatiles$udpipe$model_obj, \n    x = x, tokenizer = volatiles$udpipe$tokenizer, tagger = volatiles$udpipe$tagger, \n    parser = volatiles$udpipe$parser, ))","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"as.data.frame.udpipe_connlu(udpipe::udpipe_annotate(object = volatiles$udpipe$model_obj, \n    x = x, tokenizer = volatiles$udpipe$tokenizer, tagger = volatiles$udpipe$tagger, \n    parser = volatiles$udpipe$parser, ))","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"read_connlu(x, is_udpipe_annotation = TRUE, ...)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"out[, `:=`(c(\"token_id\", \"token\", \"lemma\", \"upos\", \"xpos\", \"feats\", \n    \"head_token_id\", \"dep_rel\", \"deps\", \"misc\"), data.table::tstrsplit(txt, \n    \"\\t\", fixed = TRUE))]","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"`[.data.table`(out, , `:=`(c(\"token_id\", \"token\", \"lemma\", \"upos\", \n    \"xpos\", \"feats\", \"head_token_id\", \"dep_rel\", \"deps\", \"misc\"), \n    data.table::tstrsplit(txt, \"\\t\", fixed = TRUE)))","line_number":0}],"message":"Error in `[.data.table`(out, , `:=`(c(\"token_id\", \"token\", \"lemma\", \"upos\",  : \n  Supplied 10 columns to be assigned an empty list (which may be an empty data.table or data.frame since they are lists too). To delete multiple columns use NULL instead. To add multiple empty list columns, use list(list()).\n"}