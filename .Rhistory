knitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)
library(tidyverse)
library(readxl)
library(lubridate)
library(quanteda)
library(quanteda.textplots)
library(quanteda.textstats)
library(ggwordcloud)
library(tidytext)
library(cowplot)
df<-readRDS("Enqueteclient.rds")
#platte
col<-c("firebrick","Gold1","Darkgreen")
foo<-df %>%
select(2, 3, 4, 5, 7, 10, 11, 12, 13, 15,NumQuestion, Reponse)%>%
mutate(nps=ifelse(NumQuestion==90,Reponse,NA),
explication=ifelse(NumQuestion==94,Reponse,NA),
satisfaction=ifelse(NumQuestion==88,Reponse,NA),
intention=ifelse(NumQuestion==89,Reponse,NA),
t2=year(datedebutadhesion),
t1=year(DateEnvoiMail),
t=t1-t2)%>%
group_by(id)%>%
summarise(nps=max(nps, na.rm=TRUE),
satisfaction=max(satisfaction, na.rm=TRUE),
intention=max(intention, na.rm=TRUE),
explication=last(explication),
NbPassageKS=last(NbPassageKS),
CaTicket=last(CaTicket),
t=last(t))
foo$CaTicket<-as.numeric(foo$CaTicket)
foo$nps<-as.numeric(foo$nps)
foo$satisfaction<-as.numeric(foo$satisfaction)
foo$intention<-as.numeric(foo$intention)
ggplot(foo, aes(x=NbPassageKS, y=nps))+geom_point()+geom_smooth()+scale_x_log10()
ggplot(foo, aes(x=CaTicket, y=nps))+geom_point()+geom_smooth()+scale_x_log10()
ggplot(foo, aes(x=t, y=nps))+geom_point()+geom_smooth()
fit<- lm(nps~NbPassageKS+CaTicket+t, foo)
summary(fit)
foo2<-foo%>%select(2,3,4,6) %>% drop_na()
cor(foo2)
ggplot(foo, aes(x=t, y=nps))+geom_point()+geom_smooth()
foo2<-foo%>%select(2,3,4,6,CaTicket,t) %>% drop_na()
cor(foo2)
library(ggcorrplot)
ggcorrplot(r, hc.order = TRUE, type = "lower",
outline.col = "white",
ggtheme = ggplot2::theme_gray,
colors = c("#6D9EC1", "white", "#E46726"))
r<- round(cor(foo2),3)
library(ggcorrplot)
ggcorrplot(r, hc.order = TRUE, type = "lower",
outline.col = "white",
ggtheme = ggplot2::theme_gray,
colors = c("#6D9EC1", "white", "#E46726"))
ggcorrplot(r, hc.order = TRUE, type = "lower",
outline.col = "white",
colors = c("#6D9EC1", "white", "#E46726"),
lab=TRUE)
toks <- tokens(corpus, remove_punct = FALSE) %>%
tokens_remove(pattern = stopwords("fr"), pattern="[B,b]otanic.*") %>%
tokens_group(groups = NPS)
toks <- tokens(corpus, remove_punct = FALSE) %>%
tokens_remove(pattern = stopwords("fr"))%>%
pattern="[B,b]otanic.*") %>%
toks <- tokens(corpus, remove_punct = FALSE) %>%
tokens_remove(pattern = stopwords("fr"))%>%
tokens_remove(pattern="[B,b]otanic.*") %>%
tokens_group(groups = NPS)
toks <- tokens(corpus, remove_punct = FALSE) %>%
tokens_remove(pattern = stopwords("fr"))%>%
tokens_remove(pattern="Botanic.*") %>%
tokens_group(groups = NPS)
corpus<-corpus(foo1,text_field ="explication")
foo1<-foo %>%
mutate(NPS=ifelse(nps<7, "Détracteurs",
ifelse(nps>6 & nps<9,"Passifs", "Promoteurs"))) %>%
mutate(p=ifelse(NPS=="Promoteurs", 1, 0),
d=ifelse(NPS=="Détracteurs", 1, 0))
d<- mean(foo1$d, na.rm=TRUE)
d
p<-mean(foo1$p, na.rm=TRUE)
p
score_nps<- round((p-d)*100,1)
score_nps
ggplot(foo1, aes(x=nps))+
geom_histogram(binwidth = 1,aes(fill=NPS))+
theme_bw()+
labs( title= " Distribution des scores NPS", subtitle = paste0("Score NPS = ", score_nps), caption = "n=13954", y = "fréquence")+ scale_fill_manual(values=col)
ggsave("NPS1.jpg", plot=last_plot(), width = 20, height = 20, units = "cm")
corpus<-corpus(foo1,text_field ="explication")
toks <- tokens(corpus, remove_punct = FALSE) %>%
tokens_remove(pattern = stopwords("fr"))%>%
tokens_remove(pattern="Botanic.*") %>%
tokens_group(groups = NPS)
dfm <- dfm(toks) %>%
dfm_trim(min_termfreq = 30, verbose = FALSE)
textplot_wordcloud(dfm,comparison = TRUE)
ggsave("NPS2.jpg", plot=last_plot(), width = 20, height = 20, units = "cm")
textplot_wordcloud(dfm,comparison = TRUE, color = col)
#platte
col<-c("firebrick","Gold2","Darkgreen")
foo<-df %>%
select(2, 3, 4, 5, 7, 10, 11, 12, 13, 15,NumQuestion, Reponse)%>%
mutate(nps=ifelse(NumQuestion==90,Reponse,NA),
explication=ifelse(NumQuestion==94,Reponse,NA),
satisfaction=ifelse(NumQuestion==88,Reponse,NA),
intention=ifelse(NumQuestion==89,Reponse,NA),
t2=year(datedebutadhesion),
t1=year(DateEnvoiMail),
t=t1-t2)%>%
group_by(id)%>%
summarise(nps=max(nps, na.rm=TRUE),
satisfaction=max(satisfaction, na.rm=TRUE),
intention=max(intention, na.rm=TRUE),
explication=last(explication),
NbPassageKS=last(NbPassageKS),
CaTicket=last(CaTicket),
t=last(t))
foo$CaTicket<-as.numeric(foo$CaTicket)
foo$nps<-as.numeric(foo$nps)
foo$satisfaction<-as.numeric(foo$satisfaction)
foo$intention<-as.numeric(foo$intention)
ggplot(foo, aes(x=NbPassageKS, y=nps))+geom_point()+geom_smooth()+scale_x_log10()
ggplot(foo, aes(x=CaTicket, y=nps))+geom_point()+geom_smooth()+scale_x_log10()
ggplot(foo, aes(x=t, y=nps))+geom_point()+geom_smooth()
fit<- lm(nps~NbPassageKS+CaTicket+t, foo)
summary(fit)
foo1<-foo %>%
mutate(NPS=ifelse(nps<7, "Détracteurs",
ifelse(nps>6 & nps<9,"Passifs", "Promoteurs"))) %>%
mutate(p=ifelse(NPS=="Promoteurs", 1, 0),
d=ifelse(NPS=="Détracteurs", 1, 0))
d<- mean(foo1$d, na.rm=TRUE)
d
p<-mean(foo1$p, na.rm=TRUE)
p
score_nps<- round((p-d)*100,1)
score_nps
ggplot(foo1, aes(x=nps))+
geom_histogram(binwidth = 1,aes(fill=NPS))+
theme_bw()+
labs( title= " Distribution des scores NPS", subtitle = paste0("Score NPS = ", score_nps), caption = "n=13954", y = "fréquence")+ scale_fill_manual(values=col)
ggsave("NPS1.jpg", plot=last_plot(), width = 20, height = 20, units = "cm")
corpus<-corpus(foo1,text_field ="explication")
toks <- tokens(corpus, remove_punct = FALSE) %>%
tokens_remove(pattern = stopwords("fr"))%>%
tokens_remove(pattern="Botanic.*") %>%
tokens_group(groups = NPS)
dfm <- dfm(toks) %>%
dfm_trim(min_termfreq = 30, verbose = FALSE)
textplot_wordcloud(dfm,comparison = TRUE, color = col)
ggsave("NPS2.jpg", plot=last_plot(), width = 20, height = 20, units = "cm")
toks <- tokens(corpus, remove_punct = TRUE) %>%
tokens_group(groups = NPS)
cols <- textstat_collocations(toks, size = 2:4, min_count = 5) %>%filter(z>15)
toks2 <- tokens_compound(toks, pattern = cols) %>%
tokens_remove(pattern = stopwords("fr") )
dfm <-toks2 %>%
tokens_group(groups = NPS)%>%
dfm()
stat<- dfm %>%
textstat_frequency(n = 60,  groups = NPS)
ggplot(stat, aes(label = feature)) +
geom_text_wordcloud(aes(size=log(frequency), color=group)) +
theme_minimal()+
facet_wrap(vars(group))+scale_color_manual(values=col)
ggsave("NPS3.jpg", plot=last_plot(), width = 20, height = 20, units = "cm")
toks <- tokens(corpus, remove_punct = TRUE) %>%
tokens_group(groups = NPS)
cols <- textstat_collocations(toks, size = 2:4, min_count = 5) %>%filter(z>15)
toks2 <- tokens_compound(toks, pattern = cols) %>%
tokens_remove(pattern = stopwords("fr") )
dfm <-toks2 %>%
tokens_group(groups = NPS)%>%
dfm()
stat<- dfm %>%
textstat_frequency(n = 50,  groups = NPS)
ggplot(stat, aes(label = feature)) +
geom_text_wordcloud(aes(size=log(frequency), color=group)) +
theme_minimal()+
facet_wrap(vars(group))+scale_color_manual(values=col)
ggsave("NPS3.jpg", plot=last_plot(), width = 20, height = 20, units = "cm")
knitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)
library(tidyverse)
library(readxl)
library(lubridate)
library(quanteda)
library(quanteda.textplots)
library(quanteda.textstats)
library(ggwordcloud)
library(tidytext)
library(cowplot)
df<-readRDS("Enqueteclient.rds")
#platte
col<-c("firebrick","Gold3","Darkgreen")
foo<-df %>%
select(2, 3, 4, 5, 7, 10, 11, 12, 13, 15,NumQuestion, Reponse)%>%
mutate(nps=ifelse(NumQuestion==90,Reponse,NA),
explication=ifelse(NumQuestion==94,Reponse,NA),
satisfaction=ifelse(NumQuestion==88,Reponse,NA),
intention=ifelse(NumQuestion==89,Reponse,NA),
t2=year(datedebutadhesion),
t1=year(DateEnvoiMail),
t=t1-t2)%>%
group_by(id)%>%
summarise(nps=max(nps, na.rm=TRUE),
satisfaction=max(satisfaction, na.rm=TRUE),
intention=max(intention, na.rm=TRUE),
explication=last(explication),
NbPassageKS=last(NbPassageKS),
CaTicket=last(CaTicket),
t=last(t))
foo$CaTicket<-as.numeric(foo$CaTicket)
foo$nps<-as.numeric(foo$nps)
foo$satisfaction<-as.numeric(foo$satisfaction)
foo$intention<-as.numeric(foo$intention)
ggplot(foo, aes(x=NbPassageKS, y=nps))+geom_point()+geom_smooth()+scale_x_log10()
ggplot(foo, aes(x=CaTicket, y=nps))+geom_point()+geom_smooth()+scale_x_log10()
ggplot(foo, aes(x=t, y=nps))+geom_point()+geom_smooth()
fit<- lm(nps~NbPassageKS+CaTicket+t, foo)
summary(fit)
foo2<-foo%>%select(2,3,4,6,CaTicket,t) %>% drop_na()
r<- round(cor(foo2),3)
library(ggcorrplot)
ggcorrplot(r, hc.order = TRUE, type = "lower",
outline.col = "white",
colors = c("#6D9EC1", "white", "#E46726"),
lab=TRUE)
foo1<-foo %>%
mutate(NPS=ifelse(nps<7, "Détracteurs",
ifelse(nps>6 & nps<9,"Passifs", "Promoteurs"))) %>%
mutate(p=ifelse(NPS=="Promoteurs", 1, 0),
d=ifelse(NPS=="Détracteurs", 1, 0))
d<- mean(foo1$d, na.rm=TRUE)
d
p<-mean(foo1$p, na.rm=TRUE)
p
score_nps<- round((p-d)*100,1)
score_nps
ggplot(foo1, aes(x=nps))+
geom_histogram(binwidth = 1,aes(fill=NPS))+
theme_bw()+
labs( title= " Distribution des scores NPS", subtitle = paste0("Score NPS = ", score_nps), caption = "n=13954", y = "fréquence")+ scale_fill_manual(values=col)
ggsave("NPS1.jpg", plot=last_plot(), width = 20, height = 20, units = "cm")
corpus<-corpus(foo1,text_field ="explication")
toks <- tokens(corpus, remove_punct = FALSE) %>%
tokens_remove(pattern = stopwords("fr"))%>%
tokens_remove(pattern="Botanic.*") %>%
tokens_group(groups = NPS)
dfm <- dfm(toks) %>%
dfm_trim(min_termfreq = 30, verbose = FALSE)
textplot_wordcloud(dfm,comparison = TRUE, color = col)
ggsave("NPS2.jpg", plot=last_plot(), width = 20, height = 20, units = "cm")
toks <- tokens(corpus, remove_punct = TRUE) %>%
tokens_group(groups = NPS)
cols <- textstat_collocations(toks, size = 2:4, min_count = 5) %>%filter(z>15)
toks2 <- tokens_compound(toks, pattern = cols) %>%
tokens_remove(pattern = stopwords("fr") )
dfm <-toks2 %>%
tokens_group(groups = NPS)%>%
dfm()
stat<- dfm %>%
textstat_frequency(n = 50,  groups = NPS)
ggplot(stat, aes(label = feature)) +
geom_text_wordcloud(aes(size=log(frequency), color=group)) +
theme_minimal()+
facet_wrap(vars(group))+scale_color_manual(values=col)
ggsave("NPS3.jpg", plot=last_plot(), width = 20, height = 20, units = "cm")
ggplot(stat, aes(label = feature)) +
geom_text_wordcloud(aes(size=frequency, color=group)) +
theme_minimal()+
facet_wrap(vars(group))+scale_color_manual(values=col)+
lab(title="Nuage des 50 mots les plus fréquents(Par groupes")
ggplot(stat, aes(label = feature)) +
geom_text_wordcloud(aes(size=frequency, color=group)) +
theme_minimal()+
facet_wrap(vars(group))+scale_color_manual(values=col)+
labs(title="Nuage des 50 mots les plus fréquents(Par groupes")
ggplot(stat, aes(label = feature)) +
geom_text_wordcloud(aes(size=log(frequency), color=group)) +
theme_minimal()+
facet_wrap(vars(group))+scale_color_manual(values=col)+
labs(title="Nuage des 50 mots les plus fréquents(Par groupes",
caption = "La taille des mots est proportionnelle au log de leurs fréquences")
ggplot(foo1, aes(x=nps))+
geom_histogram(binwidth = 1,aes(fill=NPS))+
theme_bw()+
labs( title= " Distribution des scores NPS", subtitle = paste0("Score NPS = ", score_nps), caption = "n=13954", y = "Fréquence")+ scale_fill_manual(values=col)+scale_x_discrete(name="Note NPS", breaks=c("1","2","3","4","5","6","7", "8", "9", 10))
ggplot(foo1, aes(x=nps))+
geom_histogram(binwidth = 1,aes(fill=NPS))+
theme_bw()+
labs( title= " Distribution des scores NPS", subtitle = paste0("Score NPS = ", score_nps), caption = "n=13954", y = "Fréquence")+ scale_fill_manual(values=col)+
scale_x_discrete(name="Note NPS", breaks=c("1","2","3","4","5","6","7", "8", "9", 10),
label=c("1","2","3","4","5","6","7", "8", "9", 10))
ggplot(foo1, aes(x=nps))+
geom_histogram(binwidth = 1,aes(fill=NPS))+
theme_bw()+
labs( title= " Distribution des scores NPS", subtitle = paste0("Score NPS = ", score_nps), caption = "n=13954", y = "Fréquence")+ scale_fill_manual(values=col)+
scale_x_discrete(name="Note NPS", breaks=c("1","2","3","4","5","6","7", "8", "9", 10),
limits=c("1","2","3","4","5","6","7", "8", "9", 10))
g3<-textplot_wordcloud(dfm,comparison = TRUE, color = col)
g3
textplot_wordcloud(dfm,comparison = TRUE, color = col)
plot_grid(g1, g2 ,g3,p,  labels = c('Détracteurs', 'Passifs', 'Promoteurs'), label_size = 12, ncol=3)
g1<-ggplot(foo1, aes(x=nps))+
geom_histogram(binwidth = 1,aes(fill=NPS))+
theme_bw()+
labs( title= " Distribution des scores NPS", subtitle = paste0("Score NPS = ", score_nps), caption = "n=13954", y = "Fréquence")+ scale_fill_manual(values=col)+
scale_x_discrete(name="Note NPS", breaks=c("1","2","3","4","5","6","7", "8", "9", 10),
limits=c("1","2","3","4","5","6","7", "8", "9", 10))
g1
g_b<-ggplot(stat, aes(label = feature)) +
geom_text_wordcloud(aes(size=log(frequency), color=group)) +
theme_minimal()+
facet_wrap(vars(group))+scale_color_manual(values=col)+
labs(title="Nuage des 50 mots les plus fréquents(Par groupes",
caption = "La taille des mots est proportionnelle au log de leurs fréquences")
g_b
ggsave("NPS3.jpg", plot=last_plot(), width = 20, height = 20, units = "cm")
# Create a dfm per group
dfm <-toks2 %>%
tokens_group(groups = NPS)%>%
dfm()
# Calculate keyness and determine "Promoteurs" as target group againts all other categories
result_keyness <- textstat_keyness(dfm, target = "Promoteurs") %>% filter (n_target>20)
# Plot estimated word keyness
g1<-textplot_keyness(result_keyness,   n = 30L, labelsize = 3,   show_legend = FALSE, show_reference = FALSE,   color = c("Darkgreen", "gray"))+xlim(0,80) + labs(x=NULL)
result_keyness <- textstat_keyness(dfm, target = "Détracteurs", )
g2<-textplot_keyness(result_keyness,   n = 30L, labelsize = 3,   show_legend = FALSE,
show_reference = FALSE,   color = c("firebrick", "gray"))+xlim(0,80)+ labs(x=NULL)
result_keyness <- textstat_keyness(pres_dfm, target = "Passifs")
View(result_keyness)
# Calculate keyness and determine "Promoteurs" as target group againts all other categories
result_keyness <- textstat_keyness(dfm, target = "Promoteurs") %>% filter (n_target>20)
# Plot estimated word keyness
g1<-textplot_keyness(result_keyness,   n = 30L, labelsize = 3,   show_legend = FALSE, show_reference = FALSE,   color = c("Darkgreen", "gray"))+xlim(0,80) + labs(x=NULL)
result_keyness <- textstat_keyness(dfm, target = "Détracteurs", )
g2<-textplot_keyness(result_keyness,   n = 30L, labelsize = 3,   show_legend = FALSE,
show_reference = FALSE,   color = c("firebrick", "gray"))+xlim(0,80)+ labs(x=NULL)
result_keyness <- textstat_keyness(pres_dfm, target = "Passifs")
result_keyness <- textstat_keyness(dfm, target = "Détracteurs" )
g2<-textplot_keyness(result_keyness,   n = 30L, labelsize = 3,   show_legend = FALSE,
show_reference = FALSE,   color = c("firebrick", "gray"))+xlim(0,80)+ labs(x=NULL)
result_keyness <- textstat_keyness(dfm, target = "Passifs")
g3<-textplot_keyness(result_keyness,   n = 30L, labelsize = 3,   show_legend = FALSE,   show_reference = FALSE,    color = c("gold2", "gray"))+xlim(0,80)+ labs(x=NULL)
p<- plot_grid(g2, g3 ,g1,  labels = c('Détracteurs', 'Passifs', 'Promoteurs'), label_size = 12, ncol=3)
title <- ggdraw() + draw_label("NPS : Les raisons qui conduisent à la recommandation (keyness)", fontface='bold')
note <- ggdraw()+ draw_text("Les valeurs représentent le keyness des termes.\nIl mesure leur caractère distinctif par une statistique du chi²", size=8,x = 0.5, y = 0.5)
plot_grid(title, p,note, ncol=1, rel_heights=c(0.1, 1)) # rel_heights values control title margins
plot_grid(g, g_b,p,  labels = c('Détracteurs', 'Passifs', 'Promoteurs'), label_size = 12, ncol=3)
foo1<-foo %>%
mutate(NPS=ifelse(nps<7, "Détracteurs",
ifelse(nps>6 & nps<9,"Passifs", "Promoteurs"))) %>%
mutate(p=ifelse(NPS=="Promoteurs", 1, 0),
d=ifelse(NPS=="Détracteurs", 1, 0))
d<- mean(foo1$d, na.rm=TRUE)
d
p<-mean(foo1$p, na.rm=TRUE)
p
score_nps<- round((p-d)*100,1)
score_nps
g<-ggplot(foo1, aes(x=nps))+
geom_histogram(binwidth = 1,aes(fill=NPS))+
theme_bw()+
labs( title= " Distribution des scores NPS", subtitle = paste0("Score NPS = ", score_nps), caption = "n=13954", y = "Fréquence")+ scale_fill_manual(values=col)+
scale_x_discrete(name="Note NPS", breaks=c("1","2","3","4","5","6","7", "8", "9", 10),
limits=c("1","2","3","4","5","6","7", "8", "9", 10))
g
ggsave("NPS1.jpg", plot=last_plot(), width = 20, height = 20, units = "cm")
toks <- tokens(corpus, remove_punct = TRUE) %>%
tokens_group(groups = NPS)
cols <- textstat_collocations(toks, size = 2:4, min_count = 5) %>%filter(z>15)
toks2 <- tokens_compound(toks, pattern = cols) %>%
tokens_remove(pattern = stopwords("fr") )
dfm <-toks2 %>%
tokens_group(groups = NPS)%>%
dfm()
stat<- dfm %>%
textstat_frequency(n = 50,  groups = NPS)
g_b<-ggplot(stat, aes(label = feature)) +
geom_text_wordcloud(aes(size=log(frequency), color=group)) +
theme_minimal()+
facet_wrap(vars(group))+scale_color_manual(values=col)+
labs(title="Nuage des 50 mots les plus fréquents(Par groupes",
caption = "La taille des mots est proportionnelle au log de leurs fréquences")
g_b
ggsave("NPS3.jpg", plot=last_plot(), width = 20, height = 20, units = "cm")
plot_grid(g, g_b,p,  labels = c('Détracteurs', 'Passifs', 'Promoteurs'), label_size = 12, ncol=3)
plot_grid(g, g_b,p,  label_size = 12,  labels = c("1", "2", "3", "4"), label_size = 12,
ncol = 2, nrow = 2, rel_widths = c(1, 3), rel_heights = c(3, 1))
plot_grid(g, g_b,p, labels = c("1", "2", "3", "4"), label_size = 12,
ncol = 2, nrow = 2, rel_widths = c(1, 3), rel_heights = c(3, 1))
plot_grid(NULL, g, g_b,p, labels = c("1", "2", "3", "4"), label_size = 12,
ncol = 2, nrow = 2, rel_widths = c(1, 3), rel_heights = c(3, 1))
p<- plot_grid(g2, g3 ,g1,  labels = c('Détracteurs', 'Passifs', 'Promoteurs'), label_size = 12, ncol=3)
plot_grid(NULL, g, g_b, p, labels = c("1", "2", "3", "4"), label_size = 12,
ncol = 2, nrow = 2, rel_widths = c(1, 3), rel_heights = c(3, 1))
plot_grid(NULL, p, g, g_b, labels = c("1", "2", "3", "4"), label_size = 12,
ncol = 2, nrow = 2, rel_widths = c(1, 3), rel_heights = c(3, 1))
plot_grid(g_b, p, NULL,g,  labels = c("1", "2", "3", "4"), label_size = 12,
ncol = 2, nrow = 2, rel_widths = c(1, 3), rel_heights = c(3, 1))
plot_grid(g_b, p, NULL,g,  labels = c("1", "2", "3", "4"), label_size = 12,
ncol = 2, nrow = 2)
plot_grid(g_b,NULL,p, g,  labels = c("1", "2", "3", "4"), label_size = 12,
ncol = 2, nrow = 2)
plot_grid(g ,g_b,NULL,p, labels = c("1", "2", "3", "4"), label_size = 12,
ncol = 2, nrow = 2)
plot_grid(g ,g_b,p,NULL, labels = c("1", "2", "3", "4"), label_size = 12,
ncol = 2, nrow = 2)
d<-textplot_wordcloud(dfm,comparison = TRUE, color = col)
plot_grid(g ,g_b,p,d, labels = c("1", "2", "3", "4"), label_size = 12,
ncol = 2, nrow = 2)
plot_grid(g ,g_b,p,d, labels = c("", "", "", ""), label_size = 12,
ncol = 2, nrow = 2)
View(df)
toks <- tokens(corpus, remove_punct = TRUE) %>%
tokens_group(groups = NPS)
cols <- textstat_collocations(toks, size = 2:4, min_count = 5) %>%filter(z>15)
toks2 <- tokens_compound(toks, pattern = cols) %>%
tokens_remove(pattern = stopwords("fr") )
dfm <-toks2 %>%
tokens_group(groups = NPS)%>%
dfm()
stat<- dfm %>%
textstat_frequency(n = 50,  groups = NPS)
g_b<-ggplot(stat, aes(label = feature)) +
geom_text_wordcloud(aes(size=log(frequency), color=group)) +
theme_minimal()+
facet_wrap(vars(group))+scale_color_manual(values=col)+
labs(title="Nuage des 50 mots les plus fréquents(Par groupes",
caption = "La taille des mots est proportionnelle au log de leurs fréquences")
g_b
ggsave("NPS3.jpg", plot=last_plot(), width = 20, height = 20, units = "cm")
cols
toks <- tokens(corpus, remove_punct = TRUE) %>%
tokens_group(groups = NPS)
cols <- textstat_collocations(toks, size = 2:4, min_count = 5) %>%filter(z>15)
cols
toks2 <- tokens_compound(toks, pattern = cols) %>%
tokens_remove(pattern = stopwords("fr") )
dfm <-toks2 %>%
tokens_group(groups = NPS)%>%
dfm()
stat<- dfm %>%
textstat_frequency(n = 50,  groups = NPS)
g_b<-ggplot(stat, aes(label = feature)) +
geom_text_wordcloud(aes(size=log(frequency), color=group)) +
theme_minimal()+
facet_wrap(vars(group))+scale_color_manual(values=col)+
labs(title="Nuage des 50 mots les plus fréquents(Par groupes",
caption = "La taille des mots est proportionnelle au log de leurs fréquences")
g_b
ggsave("NPS3.jpg", plot=last_plot(), width = 20, height = 20, units = "cm")
# Calculate keyness and determine "Promoteurs" as target group againts all other categories
result_keyness <- textstat_keyness(dfm, target = "Promoteurs") %>% filter (n_target>20)
# Plot estimated word keyness
g1<-textplot_keyness(result_keyness,   n = 30L, labelsize = 3,   show_legend = FALSE, show_reference = FALSE,   color = c("Darkgreen", "gray"))+xlim(0,80) + labs(x=NULL)
result_keyness <- textstat_keyness(dfm, target = "Détracteurs" )
g2<-textplot_keyness(result_keyness,   n = 30L, labelsize = 3,   show_legend = FALSE,
show_reference = FALSE,   color = c("firebrick", "gray"))+xlim(0,80)+ labs(x=NULL)
result_keyness <- textstat_keyness(dfm, target = "Passifs")
g3<-textplot_keyness(result_keyness,   n = 30L, labelsize = 3,   show_legend = FALSE,   show_reference = FALSE,    color = c("gold2", "gray"))+xlim(0,80)+ labs(x=NULL)
p<- plot_grid(g2, g3 ,g1,  labels = c('Détracteurs', 'Passifs', 'Promoteurs'), label_size = 12, ncol=3)
title <- ggdraw() + draw_label("NPS : Les raisons qui conduisent à la recommandation (keyness)", fontface='bold')
note <- ggdraw()+ draw_text("Les valeurs représentent le keyness des termes.\nIl mesure leur caractère distinctif par une statistique du chi²", size=8,x = 0.5, y = 0.5)
plot_grid(title, p,note, ncol=1, rel_heights=c(0.1, 1)) # rel_heights values control title margins
