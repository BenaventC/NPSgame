siz1=ifelse(V(g)$type, 0, Marque$n/2)
siz2=ifelse(V(g)$type, log(lemma$n)/3, 0)
#tracer le graphe
plot(g,
vertex.label.color = col2,
vertex.shape=shape,
vertex.size=siz1,
vertex.label.cex=siz2,
vertex.label.family="Helvetica",
edge.arrow.size=0,
edge.width=1*(E(g)$n),
edge.curved=0.5,
vertex.color=V(g)$color)
perso$doc_id<-as.numeric(rownames(perso))
res1 <-obj %>%
filter(relation == "amod") %>% #selection
full_join(perso) %>%  #enrichissement
select(Marque, lemma)%>% mutate(n=1)%>% #frequence des mots par marques
group_by(Marque, lemma)%>%
summarise(n=sum(n)) %>%
drop_na()
#res1[is.na(res1)] <- 0
lemma<-res1 %>% group_by(lemma)%>%summarise(n=sum(n))%>%rename(lemma=lemma)
Marque<-res1 %>% group_by(Marque)%>%summarise(n=sum(n))%>%rename(lemma=Marque) # à verif
lemma2<-rbind(lemma, Marque)
Marque2<-df %>% group_by(Marque)%>%summarise(nps=mean(nps))
library(igraph)
fine <- 5
palette <- colorRampAlpha(c('Firebrick','Orange','green2'), alpha=0.5)
perso$doc_id<-as.numeric(rownames(perso))
res1 <-obj %>%
filter(relation == "amod") %>% #selection
full_join(perso) %>%  #enrichissement
select(Marque, lemma)%>% mutate(n=1)%>% #frequence des mots par marques
group_by(Marque, lemma)%>%
summarise(n=sum(n)) %>%
drop_na()
#res1[is.na(res1)] <- 0
lemma<-res1 %>% group_by(lemma)%>%summarise(n=sum(n))%>%rename(lemma=lemma)
Marque<-res1 %>% group_by(Marque)%>%summarise(n=sum(n))%>%rename(lemma=Marque) # à verif
lemma2<-rbind(lemma, Marque)
Marque2<-df %>% group_by(Marque)%>%summarise(nps=mean(nps))
library(igraph)
fine <- 5
palette <- colorRampPalette(c('Firebrick','Orange','green2'), alpha=1)
#graphe bipartite
Edge<-res1
Edge<-subset(Edge, n>0)   #ne garder que ceux qui sont effectifs
#definition du graphe
g <- graph_from_data_frame(Edge, directed=FALSE, vertices=NULL)
#définir les paramètres du graph
layout <- layout_with_mds(g, dim=2) #projection dans le plan
V(g)$type <- bipartite.mapping(g)$type #prendre en compte les 2 catégorie d'obkets ( marques et termes)
V(g)$color <- palette(fine) [as.numeric(cut(Marque2$nps,breaks=fine))]# colour_values(Marque2$nps,palette = "palette")
col2 = ifelse( V(g)$type, "grey10", "blue4") # assign color by node type
shape1 = ifelse(V(g)$type, "circle", "square") # assign shape by node type
siz1=ifelse(V(g)$type, 0, Marque$n/2)
siz2=ifelse(V(g)$type, log(lemma$n)/3, 0)
#tracer le graphe
plot(g,
vertex.label.color = col2,
vertex.shape=shape,
vertex.size=siz1,
vertex.label.cex=siz2,
vertex.label.family="Helvetica",
edge.arrow.size=0,
edge.width=1*(E(g)$n),
edge.curved=0.5,
vertex.color=V(g)$color)
palette <- colorRampPalette(c('Firebrick','Orange','green2'), alpha=TRUE)
perso$doc_id<-as.numeric(rownames(perso))
res1 <-obj %>%
filter(relation == "amod") %>% #selection
full_join(perso) %>%  #enrichissement
select(Marque, lemma)%>% mutate(n=1)%>% #frequence des mots par marques
group_by(Marque, lemma)%>%
summarise(n=sum(n)) %>%
drop_na()
#res1[is.na(res1)] <- 0
lemma<-res1 %>% group_by(lemma)%>%summarise(n=sum(n))%>%rename(lemma=lemma)
Marque<-res1 %>% group_by(Marque)%>%summarise(n=sum(n))%>%rename(lemma=Marque) # à verif
lemma2<-rbind(lemma, Marque)
Marque2<-df %>% group_by(Marque)%>%summarise(nps=mean(nps))
library(igraph)
fine <- 5
palette <- colorRampPalette(c('Firebrick','Orange','green2'), alpha=TRUE)
#graphe bipartite
Edge<-res1
Edge<-subset(Edge, n>0)   #ne garder que ceux qui sont effectifs
#definition du graphe
g <- graph_from_data_frame(Edge, directed=FALSE, vertices=NULL)
#définir les paramètres du graph
layout <- layout_with_mds(g, dim=2) #projection dans le plan
V(g)$type <- bipartite.mapping(g)$type #prendre en compte les 2 catégorie d'obkets ( marques et termes)
V(g)$color <- palette(fine) [as.numeric(cut(Marque2$nps,breaks=fine))]# colour_values(Marque2$nps,palette = "palette")
col2 = ifelse( V(g)$type, "grey10", "blue4") # assign color by node type
shape1 = ifelse(V(g)$type, "circle", "square") # assign shape by node type
siz1=ifelse(V(g)$type, 0, Marque$n/2)
siz2=ifelse(V(g)$type, log(lemma$n)/3, 0)
#tracer le graphe
plot(g,
vertex.label.color = col2,
vertex.shape=shape,
vertex.size=siz1,
vertex.label.cex=siz2,
vertex.label.family="Helvetica",
edge.arrow.size=0,
edge.width=1*(E(g)$n),
edge.curved=0.5,
vertex.color=V(g)$color)
perso$doc_id<-as.numeric(rownames(perso))
res1 <-obj %>%
filter(relation == "amod") %>% #selection
full_join(perso) %>%  #enrichissement
select(Marque, lemma)%>% mutate(n=1)%>% #frequence des mots par marques
group_by(Marque, lemma)%>%
summarise(n=sum(n)) %>%
drop_na()
#res1[is.na(res1)] <- 0
lemma<-res1 %>% group_by(lemma)%>%summarise(n=sum(n))%>%rename(lemma=lemma)
Marque<-res1 %>% group_by(Marque)%>%summarise(n=sum(n))%>%rename(lemma=Marque) # à verif
lemma2<-rbind(lemma, Marque)
Marque2<-df %>% group_by(Marque)%>%summarise(nps=mean(nps))
library(igraph)
fine <- 5
palette <- colorRampPalette(c('Firebrick','Orange','green2'), alpha=TRUE)(10)
#graphe bipartite
Edge<-res1
Edge<-subset(Edge, n>0)   #ne garder que ceux qui sont effectifs
#definition du graphe
g <- graph_from_data_frame(Edge, directed=FALSE, vertices=NULL)
#définir les paramètres du graph
layout <- layout_with_mds(g, dim=2) #projection dans le plan
V(g)$type <- bipartite.mapping(g)$type #prendre en compte les 2 catégorie d'obkets ( marques et termes)
V(g)$color <- palette(fine) [as.numeric(cut(Marque2$nps,breaks=fine))]# colour_values(Marque2$nps,palette = "palette")
perso$doc_id<-as.numeric(rownames(perso))
res1 <-obj %>%
filter(relation == "amod") %>% #selection
full_join(perso) %>%  #enrichissement
select(Marque, lemma)%>% mutate(n=1)%>% #frequence des mots par marques
group_by(Marque, lemma)%>%
summarise(n=sum(n)) %>%
drop_na()
#res1[is.na(res1)] <- 0
lemma<-res1 %>% group_by(lemma)%>%summarise(n=sum(n))%>%rename(lemma=lemma)
Marque<-res1 %>% group_by(Marque)%>%summarise(n=sum(n))%>%rename(lemma=Marque) # à verif
lemma2<-rbind(lemma, Marque)
Marque2<-df %>% group_by(Marque)%>%summarise(nps=mean(nps))
library(igraph)
fine <- 5
palette <- colorRampPalette(c('Firebrick','Orange','green2'), alpha=TRUE)
#graphe bipartite
Edge<-res1
Edge<-subset(Edge, n>0)   #ne garder que ceux qui sont effectifs
#definition du graphe
g <- graph_from_data_frame(Edge, directed=FALSE, vertices=NULL)
#définir les paramètres du graph
layout <- layout_with_mds(g, dim=2) #projection dans le plan
V(g)$type <- bipartite.mapping(g)$type #prendre en compte les 2 catégorie d'obkets ( marques et termes)
V(g)$color <- palette(fine) [as.numeric(cut(Marque2$nps,breaks=fine))]# colour_values(Marque2$nps,palette = "palette")
col2 = ifelse( V(g)$type, "grey10", "blue4") # assign color by node type
shape1 = ifelse(V(g)$type, "circle", "square") # assign shape by node type
siz1=ifelse(V(g)$type, 0, Marque$n/2)
siz2=ifelse(V(g)$type, log(lemma$n)/3, 0)
#tracer le graphe
plot(g,
vertex.label.color = col2,
vertex.shape=shape,
vertex.size=siz1,
vertex.label.cex=siz2,
vertex.label.family="Helvetica",
edge.arrow.size=0,
edge.width=1*(E(g)$n),
edge.curved=0.5,
vertex.color=V(g)$color)
blues_pal_transp<-paste(palette, "50", sep="")
palette <- colorRampPalette(c('Firebrick','Orange','green2'), alpha=TRUE)
blues_pal<-blues(500)
blues_pal<-palette(500)
blues_pal_transp<-paste(blues_pal, "50", sep="")
V(g)$color <- blues_pal_transp(fine) [as.numeric(cut(Marque2$nps,breaks=fine))]# colour_values(Marque2$nps,palette = "palette")
perso$doc_id<-as.numeric(rownames(perso))
res1 <-obj %>%
filter(relation == "amod") %>% #selection
full_join(perso) %>%  #enrichissement
select(Marque, lemma)%>% mutate(n=1)%>% #frequence des mots par marques
group_by(Marque, lemma)%>%
summarise(n=sum(n)) %>%
drop_na()
#res1[is.na(res1)] <- 0
lemma<-res1 %>% group_by(lemma)%>%summarise(n=sum(n))%>%rename(lemma=lemma)
Marque<-res1 %>% group_by(Marque)%>%summarise(n=sum(n))%>%rename(lemma=Marque) # à verif
lemma2<-rbind(lemma, Marque)
Marque2<-df %>% group_by(Marque)%>%summarise(nps=mean(nps))
library(igraph)
fine <- 5
palette <- colorRampPalette(c('Firebrick','Orange','green2'), alpha=TRUE)
#graphe bipartite
Edge<-res1
Edge<-subset(Edge, n>0)   #ne garder que ceux qui sont effectifs
#definition du graphe
g <- graph_from_data_frame(Edge, directed=FALSE, vertices=NULL)
#définir les paramètres du graph
layout <- layout_with_mds(g, dim=2) #projection dans le plan
V(g)$type <- bipartite.mapping(g)$type #prendre en compte les 2 catégorie d'obkets ( marques et termes)
V(g)$color <- palette(fine) [as.numeric(cut(Marque2$nps,breaks=fine))]# colour_values(Marque2$nps,palette = "palette")
col2 = ifelse( V(g)$type, "grey10", "blue4") # assign color by node type
shape1 = ifelse(V(g)$type, "circle", "square") # assign shape by node type
siz1=ifelse(V(g)$type, 0, Marque$n/2)
siz2=ifelse(V(g)$type, log(lemma$n)/3, 0)
#tracer le graphe
plot(g,
vertex.label.color = col2,
vertex.shape=shape,
vertex.size=siz1,
vertex.label.cex=siz2,
vertex.label.family="Helvetica",
edge.arrow.size=0,
edge.width=1*(E(g)$n),
edge.curved=0.5,
vertex.color=V(g)$color)
perso$doc_id<-as.numeric(rownames(perso))
res1 <-obj %>%
filter(relation == "amod") %>% #selection
full_join(perso) %>%  #enrichissement
select(Marque, lemma)%>% mutate(n=1)%>% #frequence des mots par marques
group_by(Marque, lemma)%>%
summarise(n=sum(n)) %>%
drop_na()
#res1[is.na(res1)] <- 0
lemma<-res1 %>% group_by(lemma)%>%summarise(n=sum(n))%>%rename(lemma=lemma)
Marque<-res1 %>% group_by(Marque)%>%summarise(n=sum(n))%>%rename(lemma=Marque) # à verif
lemma2<-rbind(lemma, Marque)
Marque2<-df %>% group_by(Marque)%>%summarise(nps=mean(nps))
library(igraph)
fine <- 5
palette <- colorRampPalette(c('Firebrick','Orange','green2'), alpha=TRUE)
#graphe bipartite
Edge<-res1
Edge<-subset(Edge, n>0)   #ne garder que ceux qui sont effectifs
#definition du graphe
g <- graph_from_data_frame(Edge, directed=FALSE, vertices=NULL)
#définir les paramètres du graph
layout <- layout_with_mds(g, dim=2) #projection dans le plan
V(g)$type <- bipartite.mapping(g)$type #prendre en compte les 2 catégorie d'obkets ( marques et termes)
V(g)$color <- palette(fine) [as.numeric(cut(Marque2$nps,breaks=fine))]# colour_values(Marque2$nps,palette = "palette")
col2 = ifelse( V(g)$type, "grey10", "blue4") # assign color by node type
shape1 = ifelse(V(g)$type, "circle", "square") # assign shape by node type
siz1=ifelse(V(g)$type, 0, Marque$n/2)
siz2=ifelse(V(g)$type, log(lemma$n)/4, 0)
#tracer le graphe
plot(g,
vertex.label.color = col2,
vertex.shape=shape,
vertex.size=siz1,
vertex.label.cex=siz2,
vertex.label.family="Helvetica",
edge.arrow.size=0,
edge.width=1*(E(g)$n),
edge.curved=0.5,
vertex.color=V(g)$color)
perso$doc_id<-as.numeric(rownames(perso))
res1 <-obj %>%
filter(relation == "amod") %>% #selection
full_join(perso) %>%  #enrichissement
select(Marque, lemma)%>% mutate(n=1)%>% #frequence des mots par marques
group_by(Marque, lemma)%>%
summarise(n=sum(n)) %>%
drop_na()
#res1[is.na(res1)] <- 0
lemma<-res1 %>% group_by(lemma)%>%summarise(n=sum(n))%>%rename(lemma=lemma)
Marque<-res1 %>% group_by(Marque)%>%summarise(n=sum(n))%>%rename(lemma=Marque) # à verif
lemma2<-rbind(lemma, Marque)
Marque2<-df %>% group_by(Marque)%>%summarise(nps=mean(nps))
library(igraph)
fine <- 5
palette <- colorRampPalette(c('red','Orange','green2'), alpha=TRUE)
#graphe bipartite
Edge<-res1
Edge<-subset(Edge, n>0)   #ne garder que ceux qui sont effectifs
#definition du graphe
g <- graph_from_data_frame(Edge, directed=FALSE, vertices=NULL)
#définir les paramètres du graph
layout <- layout_with_mds(g, dim=2) #projection dans le plan
V(g)$type <- bipartite.mapping(g)$type #prendre en compte les 2 catégorie d'obkets ( marques et termes)
V(g)$color <- palette(fine) [as.numeric(cut(Marque2$nps,breaks=fine))]# colour_values(Marque2$nps,palette = "palette")
col2 = ifelse( V(g)$type, "grey10", "blue4") # assign color by node type
shape1 = ifelse(V(g)$type, "circle", "square") # assign shape by node type
siz1=ifelse(V(g)$type, 0, Marque$n/2)
siz2=ifelse(V(g)$type, log(lemma$n)/4, 0)
#tracer le graphe
plot(g,
vertex.label.color = col2,
vertex.shape=shape,
vertex.size=siz1,
vertex.label.cex=siz2,
vertex.label.family="Helvetica",
edge.arrow.size=0,
edge.width=1*(E(g)$n),
edge.curved=0.5,
vertex.color=V(g)$color)
perso$doc_id<-as.numeric(rownames(perso))
res1 <-obj %>%
filter(relation == "amod") %>% #selection
full_join(perso) %>%  #enrichissement
select(Marque, lemma)%>% mutate(n=1)%>% #frequence des mots par marques
group_by(Marque, lemma)%>%
summarise(n=sum(n)) %>%
drop_na()
#res1[is.na(res1)] <- 0
lemma<-res1 %>% group_by(lemma)%>%summarise(n=sum(n))%>%rename(lemma=lemma)
Marque<-res1 %>% group_by(Marque)%>%summarise(n=sum(n))%>%rename(lemma=Marque) # à verif
lemma2<-rbind(lemma, Marque)
Marque2<-df %>% group_by(Marque)%>%summarise(nps=mean(nps))
library(igraph)
fine <- 5
palette <- colorRampPalette(c('red','Orange','green2'), alpha=TRUE)
#graphe bipartite
Edge<-res1
Edge<-subset(Edge, n>0)   #ne garder que ceux qui sont effectifs
#definition du graphe
g <- graph_from_data_frame(Edge, directed=FALSE, vertices=NULL)
#définir les paramètres du graph
layout <- layout_with_mds(g, dim=2) #projection dans le plan
V(g)$type <- bipartite.mapping(g)$type #prendre en compte les 2 catégorie d'obkets ( marques et termes)
V(g)$color <- palette(fine) [as.numeric(cut(Marque2$nps,breaks=fine))]# colour_values(Marque2$nps,palette = "palette")
col2 = ifelse( V(g)$type, "grey10", "blue4") # assign color by node type
shape1 = ifelse(V(g)$type, "square", "circle") # assign shape by node type
siz1=ifelse(V(g)$type, 0, Marque$n/2)
siz2=ifelse(V(g)$type, log(lemma$n)/4, 0)
#tracer le graphe
plot(g,
vertex.label.color = col2,
vertex.shape=shape,
vertex.size=siz1,
vertex.label.cex=siz2,
vertex.label.family="Helvetica",
edge.arrow.size=0,
edge.width=1*(E(g)$n),
edge.curved=0.5,
vertex.color=V(g)$color)
shape1 = ifelse(V(g)$type, "square", "Circle") # assign shape by node type
perso$doc_id<-as.numeric(rownames(perso))
res1 <-obj %>%
filter(relation == "amod") %>% #selection
full_join(perso) %>%  #enrichissement
select(Marque, lemma)%>% mutate(n=1)%>% #frequence des mots par marques
group_by(Marque, lemma)%>%
summarise(n=sum(n)) %>%
drop_na()
#res1[is.na(res1)] <- 0
lemma<-res1 %>% group_by(lemma)%>%summarise(n=sum(n))%>%rename(lemma=lemma)
Marque<-res1 %>% group_by(Marque)%>%summarise(n=sum(n))%>%rename(lemma=Marque) # à verif
lemma2<-rbind(lemma, Marque)
Marque2<-df %>% group_by(Marque)%>%summarise(nps=mean(nps))
library(igraph)
fine <- 5
palette <- colorRampPalette(c('red','Orange','green2'), alpha=TRUE)
#graphe bipartite
Edge<-res1
Edge<-subset(Edge, n>0)   #ne garder que ceux qui sont effectifs
#definition du graphe
g <- graph_from_data_frame(Edge, directed=FALSE, vertices=NULL)
#définir les paramètres du graph
layout <- layout_with_mds(g, dim=2) #projection dans le plan
V(g)$type <- bipartite.mapping(g)$type #prendre en compte les 2 catégorie d'obkets ( marques et termes)
V(g)$color <- palette(fine) [as.numeric(cut(Marque2$nps,breaks=fine))]# colour_values(Marque2$nps,palette = "palette")
col2 = ifelse( V(g)$type, "grey10", "blue4") # assign color by node type
shape1 = ifelse(V(g)$type, "square", "Circle") # assign shape by node type
siz1=ifelse(V(g)$type, 0, Marque$n/2)
siz2=ifelse(V(g)$type, log(lemma$n)/4, 0)
#tracer le graphe
plot(g,
vertex.label.color = col2,
vertex.shape=shape,
vertex.size=siz1,
vertex.label.cex=siz2,
vertex.label.family="Helvetica",
edge.arrow.size=0,
edge.width=1*(E(g)$n),
edge.curved=0.5,
vertex.color=V(g)$color)
perso$doc_id<-as.numeric(rownames(perso))
res1 <-obj %>%
filter(relation == "amod") %>% #selection
full_join(perso) %>%  #enrichissement
select(Marque, lemma)%>% mutate(n=1)%>% #frequence des mots par marques
group_by(Marque, lemma)%>%
summarise(n=sum(n)) %>%
drop_na()
#res1[is.na(res1)] <- 0
lemma<-res1 %>% group_by(lemma)%>%summarise(n=sum(n))%>%rename(lemma=lemma)
Marque<-res1 %>% group_by(Marque)%>%summarise(n=sum(n))%>%rename(lemma=Marque) # à verif
lemma2<-rbind(lemma, Marque)
Marque2<-df %>% group_by(Marque)%>%summarise(nps=mean(nps))
library(igraph)
fine <- 5
palette <- colorRampPalette(c('red','Orange','green2'), alpha=TRUE)
#graphe bipartite
Edge<-res1
Edge<-subset(Edge, n>0)   #ne garder que ceux qui sont effectifs
#definition du graphe
g <- graph_from_data_frame(Edge, directed=FALSE, vertices=NULL)
#définir les paramètres du graph
layout <- layout_with_mds(g, dim=2) #projection dans le plan
V(g)$type <- bipartite.mapping(g)$type #prendre en compte les 2 catégorie d'obkets ( marques et termes)
V(g)$color <- palette(fine) [as.numeric(cut(Marque2$nps,breaks=fine))]# colour_values(Marque2$nps,palette = "palette")
col2 = ifelse( V(g)$type, "grey10", "blue4") # assign color by node type
shape1 = ifelse(V(g)$type, "square", "Circle") # assign shape by node type
siz1=ifelse(V(g)$type, 0, Marque$n/2)
siz2=ifelse(V(g)$type, log(lemma$n)/4, 0)
#tracer le graphe
plot(g,
vertex.label.color = col2,
vertex.shape=shape1,
vertex.size=siz1,
vertex.label.cex=siz2,
vertex.label.family="Helvetica",
edge.arrow.size=0,
edge.width=1*(E(g)$n),
edge.curved=0.5,
vertex.color=V(g)$color)
perso$doc_id<-as.numeric(rownames(perso))
res1 <-obj %>%
filter(relation == "amod") %>% #selection
full_join(perso) %>%  #enrichissement
select(Marque, lemma)%>% mutate(n=1)%>% #frequence des mots par marques
group_by(Marque, lemma)%>%
summarise(n=sum(n)) %>%
drop_na()
#res1[is.na(res1)] <- 0
lemma<-res1 %>% group_by(lemma)%>%summarise(n=sum(n))%>%rename(lemma=lemma)
Marque<-res1 %>% group_by(Marque)%>%summarise(n=sum(n))%>%rename(lemma=Marque) # à verif
lemma2<-rbind(lemma, Marque)
Marque2<-df %>% group_by(Marque)%>%summarise(nps=mean(nps))
library(igraph)
fine <- 5
palette <- colorRampPalette(c('red','Orange','green2'), alpha=TRUE)
#graphe bipartite
Edge<-res1
Edge<-subset(Edge, n>0)   #ne garder que ceux qui sont effectifs
#definition du graphe
g <- graph_from_data_frame(Edge, directed=FALSE, vertices=NULL)
#définir les paramètres du graph
layout <- layout_with_mds(g, dim=2) #projection dans le plan
V(g)$type <- bipartite.mapping(g)$type #prendre en compte les 2 catégorie d'obkets ( marques et termes)
V(g)$color <- palette(fine) [as.numeric(cut(Marque2$nps,breaks=fine))]# colour_values(Marque2$nps,palette = "palette")
col2 = ifelse( V(g)$type, "grey10", "blue4") # assign color by node type
shape1 = ifelse(V(g)$type, "square", "circle") # assign shape by node type
siz1=ifelse(V(g)$type, 0, Marque$n/2)
siz2=ifelse(V(g)$type, log(lemma$n)/4, 0)
#tracer le graphe
plot(g,
vertex.label.color = col2,
vertex.shape=shape1,
vertex.size=siz1,
vertex.label.cex=siz2,
vertex.label.family="Helvetica",
edge.arrow.size=0,
edge.width=1*(E(g)$n),
edge.curved=0.5,
vertex.color=V(g)$color)
perso$doc_id<-as.numeric(rownames(perso))
res1 <-obj %>%
filter(relation == "amod") %>% #selection
full_join(perso) %>%  #enrichissement
select(Marque, lemma)%>% mutate(n=1)%>% #frequence des mots par marques
group_by(Marque, lemma)%>%
summarise(n=sum(n)) %>%
drop_na()
#res1[is.na(res1)] <- 0
lemma<-res1 %>% group_by(lemma)%>%summarise(n=sum(n))%>%rename(lemma=lemma)
Marque<-res1 %>% group_by(Marque)%>%summarise(n=sum(n))%>%rename(lemma=Marque) # à verif
lemma2<-rbind(lemma, Marque)
Marque2<-df %>% group_by(Marque)%>%summarise(nps=mean(nps))
library(igraph)
fine <- 5
palette <- colorRampPalette(c('red','Orange','green2'), alpha=TRUE)
#graphe bipartite
Edge<-res1
Edge<-subset(Edge, n>0)   #ne garder que ceux qui sont effectifs
#definition du graphe
g <- graph_from_data_frame(Edge, directed=FALSE, vertices=NULL)
#définir les paramètres du graph
layout <- layout_with_mds(g, dim=2) #projection dans le plan
V(g)$type <- bipartite.mapping(g)$type #prendre en compte les 2 catégorie d'obkets ( marques et termes)
V(g)$color <- palette(fine) [as.numeric(cut(Marque2$nps,breaks=fine))]# colour_values(Marque2$nps,palette = "palette")
col2 = ifelse( V(g)$type, "grey20", "black") # assign color by node type
shape1 = ifelse(V(g)$type, "square", "circle") # assign shape by node type
siz1=ifelse(V(g)$type, 0, Marque$n/2)
siz2=ifelse(V(g)$type, log(lemma$n)/4, 0)
#tracer le graphe
plot(g,
vertex.label.color = col2,
vertex.shape=shape1,
vertex.size=siz1,
vertex.label.cex=siz2,
vertex.label.family="Helvetica",
edge.arrow.size=0,
edge.width=1*(E(g)$n),
edge.curved=0.5,
vertex.color=V(g)$color)
plot(g,
vertex.label.color = col2,
vertex.shape=shape1,
vertex.size=siz1,
vertex.label.cex=siz2,
vertex.label.family="Helvetica",
edge.arrow.size=0,
edge.width=1*(E(g)$n),
edge.curved=0.5,
vertex.color=V(g)$color)
