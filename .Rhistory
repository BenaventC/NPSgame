#library(rcompanion)
#recodons les répondants
foo1 <- foo1 %>%
mutate(reponse=ifelse(is.na(explication), "Pas de réponse", "Réponse"))
t<-table(foo1$NPS,foo1$reponse)
chi2<-chisq.test(t)
chi<-round(chi2$statistic,2)
p<-round(chi2$p.value,3)
V<-cramerV(t, digit=3)
g1 <- ggplot(data = foo1) +
geom_mosaic(aes(x=product(NPS ,reponse), fill = NPS))+
theme(axis.text.x = element_text(angle = 45, hjust = -0.1, vjust = -0.2))+
theme(legend.position = "none")+
labs(title="Un biais négatif de réponse",
subtitle=paste0("chi2 =",chi, " p = ", p, " - V : ", V))+
scale_fill_manual(values=col)
g1
# 1 définir le corpus
corpus<-corpus(foo1,text_field ="explication")
# 2 tokeniser le corpus
toks <- tokens(corpus, remove_punct = TRUE) %>%
tokens_remove(pattern = stopwords("fr"))%>%
tokens_remove(pattern="Botanic.*") %>%
tokens_group(groups = NPS)
# 3 construire le dfm
dfm <- dfm(toks) %>%
dfm_trim(min_termfreq = 40, verbose = FALSE)
# 4 afficher le wordcloud
textplot_wordcloud(dfm,comparison = TRUE, color = col)
toks <- tokens(corpus, remove_punct = TRUE) %>%
tokens_remove(pattern = stopwords("fr"))%>%
tokens_remove(pattern="Botanic.*")
# 1 définir le corpus
corpus<-corpus(foo1,text_field ="explication")
# 2 tokeniser le corpus
toks <- tokens(corpus, remove_punct = TRUE) %>%
tokens_remove(pattern = stopwords("fr"))%>%
tokens_remove(pattern="Botanic.*") %>%
tokens_group(groups = NPS)
# 3 construire le dfm
dfm <- dfm(toks) %>%
dfm_trim(min_termfreq = 40, verbose = FALSE)
# 4 afficher le wordcloud
textplot_wordcloud(dfm,comparison = TRUE, color = col)
toks <- tokens(corpus, remove_punct = TRUE) %>%
tokens_remove(pattern = stopwords("fr"))%>%
tokens_remove(pattern="Botanic.*")
toks <- tokens(corpus, remove_punct = TRUE) %>%
tokens_group(groups = NPS)
coloc <- textstat_collocations(toks, size = 2:4, min_count = 10) %>% filter(z>10)
head(coloc, 20)
toks2 <- tokens_compound(toks, pattern = coloc) %>%
tokens_remove(pattern = stopwords("fr") )
dfm <-toks2 %>%
tokens_group(groups = NPS)%>%
dfm()
stat<- dfm %>%
textstat_frequency(n = 50,  groups = NPS)
g_b<-ggplot(stat, aes(label = feature)) +
geom_text_wordcloud(aes(size=log(frequency), color=group)) +
theme_minimal()+
facet_wrap(vars(group))+
scale_color_manual(values=col)+
labs(title="Nuage des 50 mots les plus fréquents(Par groupes",
caption = "La taille des mots est proportionnelle au log de leurs fréquences")
g_b
ggsave("NPS3.jpg", plot=last_plot(), width = 20, height = 20, units = "cm")
# Create a dfm per group
dfm <-toks2 %>%
tokens_group(groups = NPS) %>%
dfm()
# Calculate keyness and determine "Promoteurs" as target group againts all other categories
result_keyness <- textstat_keyness(dfm, target = "Promoteurs") %>% filter (n_target>20)
# Plot estimated word keyness
g1<-textplot_keyness(result_keyness,   n = 30L, labelsize = 3,   show_legend = FALSE,
show_reference = FALSE,   color = c("Darkgreen", "gray"))+
xlim(0,80) +
labs(x=NULL)
g1
result_keyness <- textstat_keyness(dfm, target = "Détracteurs" )
g2<-textplot_keyness(result_keyness,   n = 30L, labelsize = 3,   show_legend = FALSE,
show_reference = FALSE,   color = c("firebrick", "gray"))+
xlim(0,80)+
labs(x=NULL)
result_keyness <- textstat_keyness(dfm, target = "Passifs")
g3<-textplot_keyness(result_keyness,   n = 30L, labelsize = 3,   show_legend = FALSE,   show_reference = FALSE,    color = c("gold2", "gray"))+xlim(0,80)+ labs(x=NULL)
p<- plot_grid(g2, g3 ,g1,  labels = c('Détracteurs', 'Passifs', 'Promoteurs'), label_size = 12, ncol=3)
p
title <- ggdraw() + draw_label("NPS : Les raisons qui conduisent à la recommandation (keyness)", fontface='bold')
note <- ggdraw()+ draw_text("Les valeurs représentent le keyness des termes.\nIl mesure leur caractère distinctif par une statistique du chi²", size=8,x = 0.5, y = 0.5)
plot_grid(title, p,note, ncol=1, rel_heights=c(0.1, 1)) # rel_heights values control title margins
ggsave("NPS4.jpg", plot=last_plot(), width = 20, height = 20, units = "cm")
#  pour une comparaison deux à deux
#   pres_corpus <- corpus_subset(corpus, NPS %in% c("Détracteurs", "Promoteurs"))
#plot_grid(g ,p,d, labels = c("", "", "", ""), label_size = 12, ncol = 2, nrow = )
#ggsave("NPS5.jpg", plot=last_plot(), width = 20, height = 20, units = "cm")
# pre processing :
foo1<- foo1 %>%
filter(!is.na(explication))
corpus<-corpus(foo1,text_field ="explication")
toks <- tokens(corpus, remove_punct = TRUE)
cols <- textstat_collocations(toks, size = 2:4, min_count = 10) %>% filter(z>15)
toks2 <- tokens_compound(toks, pattern = cols) %>%
tokens_remove(pattern = stopwords("fr") )
dfm<-dfm(toks2)
dfm<-readRDS("topic.rds")
#un peu de recodage
table(dfm$topic)
#on recode pour une meilleure lecture
dfm$topic2[dfm$topic=="topic1"]<-"Caisse"
dfm$topic2[dfm$topic=="topic2"]<-"Magasin"
dfm$topic2[dfm$topic=="topic3"]<-"bioplantes"
dfm$topic2[dfm$topic=="topic4"]<-"Personnel"
dfm$topic2[dfm$topic=="topic5"]<-"Cartedefid"
dfm$topic2[dfm$topic=="topic6"]<-"Achat"
dfm$topic2[dfm$topic=="topic7"]<-"prix"
table(dfm$topic2)
#le tableau croisé
ca<- table(dfm$topic2, dfm$NPS)
prop.table(ca, 2)
#library ("FactoMineR")
#library(factoextra)
res.ca <- CA (ca, graph = FALSE)
fviz_ca_biplot (res.ca, repel = TRUE)
tmod_lda<- readRDS("lda.rds")
theta<-tmod_lda$theta
topic<-cbind(foo1,theta)
#on recode pour une meilleure lecture
topic <- topic %>%
rename(
Caisse = topic1,
Magasin = topic2,
Bioplantes= topic3,
Personnel=topic4,
Cartedefid= topic5,
Achat= topic6,
Prix =topic7)
library(gam)
mod1 <- gam(nps ~ s(Caisse) +s(Bioplantes)+s(Cartedefid)+s(Magasin)+s(Personnel)+s(Prix),
data = topic, family = gaussian)
summary(mod1)
par(mfrow = c(1, 2))
termplot(mod1,rug = TRUE, se = TRUE,  terms = c("s(Caisse)", "s(Bioplantes)"))
termplot(mod1, rug = TRUE, se = TRUE,  terms = c("s(Magasin)", "s(Cartedefid)"))
termplot(mod1, rug = TRUE, se = TRUE,  terms = c("s(Prix)", "s(Personnel)"))
termplot(mod1,rug = TRUE, se = TRUE,  terms = c("s(Caisse)", "s(Bioplantes)", "s(Magasin)", "s(Cartedefid)", "s(Prix)", "s(Personnel)"))
par(mfrow = c(3, 2))
termplot(mod1,rug = TRUE, se = TRUE,  terms = c("s(Caisse)", "s(Bioplantes)", "s(Magasin)", "s(Cartedefid)", "s(Prix)", "s(Personnel)"))
par(mfrow = c(2, 3))
termplot(mod1,rug = TRUE, se = TRUE,  terms = c("s(Caisse)", "s(Bioplantes)", "s(Magasin)", "s(Cartedefid)", "s(Prix)", "s(Personnel)"))
tmod_lda<- readRDS("lda.rds")
theta<-tmod_lda$theta
topic<-cbind(foo1,theta)
#on recode pour une meilleure lecture
topic <- topic %>%
rename(
Caisse = topic1,
Magasin = topic2,
Bioplantes= topic3,
Personnel=topic4,
Cartedefid= topic5,
Achat= topic6,
Prix =topic7)
library(gam)
mod1 <- gam(nps ~ s(Caisse) +s(Bioplantes)+s(Cartedefid)+s(Magasin)+s(Personnel)+s(Prix),
data = topic, family = gaussian)
summary(mod1)
par(mfrow = c(1, 2))
termplot(mod1,rug = TRUE, se = TRUE,  terms = c("s(Caisse)", "s(Bioplantes)"))
termplot(mod1, rug = TRUE, se = TRUE,  terms = c("s(Magasin)", "s(Cartedefid)"))
termplot(mod1, rug = TRUE, se = TRUE,  terms = c("s(Prix)", "s(Personnel)"))
par(mfrow = c(2, 3))
termplot(mod1,rug = TRUE, se = TRUE,  terms = c("s(Caisse)", "s(Bioplantes)", "s(Magasin)", "s(Cartedefid)", "s(Prix)", "s(Personnel)"))
knitr::opts_chunk$set(echo = TRUE,include=TRUE, warning=FALSE, message=FALSE)
library(tidyverse)
library(lubridate)
library(quanteda)
library(quanteda.textplots)
library(quanteda.textstats)
library(ggwordcloud)
library(ggmosaic)
library(rcompanion)
library(cowplot)
library ("FactoMineR")
library(factoextra)
library(seededlda)
library(gam)
df<-read_csv("nps.csv", locale = locale(encoding = "WINDOWS-1252"))
#palette de couleur
col<-c("firebrick","Gold3","Darkgreen")
theme_set(theme_minimal())
summary(mod1)
knitr::opts_chunk$set(echo = TRUE,include=TRUE, warning=FALSE, message=FALSE)
library(tidyverse)
library(lubridate)
library(quanteda)
library(quanteda.textplots)
library(quanteda.textstats)
library(ggwordcloud)
library(ggmosaic)
library(rcompanion)
library(cowplot)
library ("FactoMineR")
library(factoextra)
library(seededlda)
library(gam)
df<-read_csv("nps.csv", locale = locale(encoding = "WINDOWS-1252"))
#palette de couleur
col<-c("firebrick","Gold3","Darkgreen")
theme_set(theme_minimal())
kclus(df_clus)
hclus(df_clus)
df_clus<- topic %>% select(Caisse,Bioplantes,Cartedefid,Magasin,Personnel,Prix)
hclus(df_clus)
hclust(df_clus)
df_clus<- topic %>% select(Caisse,Bioplantes,Cartedefid,Magasin,Personnel,Prix) %>%drop_na()
hclust(df_clus)
hclust(df_clus, method="ward")
View(df_clus)
fit <-hclust(df_clus, method="ward")
df_clus<- topic %>% select(Caisse,Bioplantes,Cartedefid,Magasin,Personnel,Prix, topic8) %>%drop_na()
dist<-dist(df_clus)
fit <-hclust(dist, method="ward")
plot(fit)
groups <- cutree(fit, k=8) # cut tree into 5 clusters
rbind(topic, group)
rbind(topic, groups)
topic<- rbind(df_clus, groups)
df_clus<- rbind(df_clus, groups)
df_clus<- topic %>% select(Caisse,Bioplantes,Cartedefid,Magasin,Personnel,Prix) %>%drop_na()
df_clus<- topic %>% select(Caisse,Bioplantes,Cartedefid,Magasin,Personnel,Achat,Prix) %>%drop_na()
tmod_lda<- readRDS("lda.rds")
theta<-tmod_lda$theta
topic<-cbind(foo1,theta)
#on recode pour une meilleure lecture
topic <- topic %>%
rename(
Caisse = topic1,
Magasin = topic2,
Bioplantes= topic3,
Personnel=topic4,
Cartedefid= topic5,
Achat= topic6,
Prix =topic7)
library(gam)
mod1 <- gam(nps ~ s(Caisse) +s(Bioplantes)+s(Cartedefid)+s(Magasin)+s(Personnel)+s(Prix),
data = topic, family = gaussian)
summary(mod1)
par(mfrow = c(2, 3))
termplot(mod1,rug = TRUE, se = TRUE,  terms = c("s(Caisse)", "s(Bioplantes)", "s(Magasin)", "s(Cartedefid)", "s(Prix)", "s(Personnel)"))
df_clus<- topic %>% select(Caisse,Bioplantes,Cartedefid,Magasin,Personnel,Achat,Prix) %>%drop_na()
dist<-dist(df_clus)
fit <-hclust(dist, method="ward")
plot(fit)
groups <- cutree(fit, k=8) # cut tree into 5 clusters
df_clus<- rbind(df_clus, groups)
groups <- as.data.frame(cutree(fit, k=8)) # cut tree into 5 clusters
df_clus<- rbind(df_clus, groups)
df_clus<- topic %>% select(Caisse,Bioplantes,Cartedefid,Magasin,Personnel,Achat,Prix) %>%drop_na()
dist<-dist(df_clus)
fit <-hclust(dist, method="ward")
plot(fit)
groups <- as.data.frame(cutree(fit, k=8)) # cut tree into 5 clusters
df_clus<- cbind(df_clus, groups)
groups <- as.data.frame(cutree(fit, k=8)) %>%rename(group=8) %>% gather(variable, value , -group)# cut tree into 5 clusters
df_clus<- cbind(df_clus, groups)%>%rename(group=8) %>% gather(variable, value , -group)# cut tree into 5 clusters
ggplot(df_clus, aes(x=group,y=value, group=variable))+geom_bar(stat="identity", fill= variable)
ggplot(df_clus, aes(x=group,y=value, group=variable))+geom_bar(stat="identity", aes(fill= variable))
df_clus<- cbind(df_clus, groups)%>%rename(group=8) %>% gather(variable, value , -group) %>%
group_by(group, variable) %>% summarise(value=mea(value))# cut tree into 5 clusters
df_clus<- cbind(df_clus, groups)%>%rename(group=8) %>% gather(variable, value , -group) %>%
group_by(group, variable) %>% summarise(value=mean(value))# cut tree into 5 clusters
df_clus<- topic %>% select(Caisse,Bioplantes,Cartedefid,Magasin,Personnel,Achat,Prix) %>%drop_na()
dist<-dist(df_clus)
fit <-hclust(dist, method="ward")
plot(fit)
groups <- as.data.frame(cutree(fit, k=8))
df_clus<- cbind(df_clus, groups)%>%rename(group=8) %>% gather(variable, value , -group) %>%
group_by(group, variable) %>% summarise(value=mean(value))# cut tree into 5 clusters
ggplot(df_clus, aes(x=group,y=value, group=variable))+geom_bar(stat="identity", aes(fill= variable))
df_clus2<-cbind(topic,groups)
df_clus2<-cbind(topic,groups) %>% group_by(group)%>%sumarise(nps=mean(nps))
df_clus2<-cbind(topic,groups) %>% group_by(group)%>%summarise(nps=mean(nps))
df_clus2<-cbind(topic,groups)
df_clus2<-cbind(topic,groups) %>%
rename(group=21)%>%
group_by(group)%>%
summarise(nps=mean(nps))
ggplot(df_clus, aes(x=group,y=nps))+geom_bar(stat="identity")
df_clus2<-cbind(topic,groups) %>%
rename(group=21)%>%
group_by(group)%>%
summarise(nps=mean(nps, na.rm=TRUE))
ggplot(df_clus, aes(x=group,y=nps))+geom_bar(stat="identity")
ggplot(df_clus2, aes(x=group,y=nps))+geom_bar(stat="identity")
df_clus<- topic %>% select(Caisse,Bioplantes,Cartedefid,Magasin,Personnel,Achat,Prix) %>%drop_na()
dist<-dist(df_clus)
fit <-hclust(dist, method="ward")
plot(fit)
groups <- as.data.frame(cutree(fit, k=8))
df_clus<- cbind(df_clus, groups)%>%rename(group=8) %>% gather(variable, value , -group) %>%
group_by(group, variable) %>% summarise(value=mean(value))# cut tree into 5 clusters
ggplot(df_clus, aes(x=group,y=value, group=variable))+geom_bar(stat="identity", aes(fill= variable))
df_clus2<-cbind(topic,groups) %>%
rename(group=21)%>%
group_by(group)%>%
summarise(nps=mean(nps, na.rm=TRUE))
ggplot(df_clus2, aes(x=group,y=nps))+geom_bar(stat="identity")
ggplot(df_clus2, aes(x=group,y=nps))+geom_bar(stat="identity")
df_clus2<-cbind(topic,groups) %>%
rename(group=21)%>%
group_by(group)%>%
summarise(nps=median(nps, na.rm=TRUE))
ggplot(df_clus2, aes(x=group,y=nps))+geom_bar(stat="identity")
df_clus<- topic %>% select(Caisse,Bioplantes,Cartedefid,Magasin,Personnel,Achat,Prix) %>%drop_na()
dist<-dist(df_clus)
fit <-hclust(dist, method="ward")
plot(fit)
groups <- as.data.frame(cutree(fit, k=8))
df_clus<- cbind(df_clus, groups)%>%rename(group=8) %>% gather(variable, value , -group) %>%
group_by(group, variable) %>% summarise(value=mean(value))# cut tree into 5 clusters
ggplot(df_clus, aes(x=group,y=value, group=variable))+geom_bar(stat="identity", aes(fill= variable))
df_clus2<-cbind(topic,groups) %>%
rename(group=21)%>%
group_by(group)%>%
summarise(nps=mean(nps, na.rm=TRUE))
ggplot(df_clus2, aes(x=group,y=nps))+geom_bar(stat="identity")
1+1
a=3
1+a
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
knitr::opts_chunk$set(echo = TRUE,include=TRUE, warning=FALSE, message=FALSE)
library(tidyverse)
library(lubridate)
library(quanteda)
library(quanteda.textplots)
library(quanteda.textstats)
library(ggwordcloud)
library(ggmosaic)
library(rcompanion)
library(cowplot)
library ("FactoMineR")
library(factoextra)
library(seededlda)
library(gam)
df<-read_csv("nps.csv", locale = locale(encoding = "WINDOWS-1252"))
View(df)
#palette de couleur
col<-c("firebrick","Gold3","Darkgreen")
theme_set(theme_minimal())
foo1<-df %>%
mutate(NPS=ifelse(nps<7, "Détracteurs",
ifelse(nps>6 & nps<9,"Passifs", "Promoteurs")),
p=ifelse(NPS=="Promoteurs", 1, 0),
d=ifelse(NPS=="Détracteurs", 1, 0))
View(foo1)
#calcul du score NPS
d<- mean(foo1$d, na.rm=TRUE)
p<-mean(foo1$p, na.rm=TRUE)
score_nps<- round((p-d)*100,1)
g<-ggplot(foo1, aes(x=nps))+
geom_histogram(binwidth = 1,aes(fill=NPS))+
labs( title= " Distribution des scores NPS",
subtitle = paste0("Score NPS = ", score_nps),
caption = "n=13954",
y = "Fréquence")+
scale_fill_manual(values=col)+
scale_x_discrete(name="Note NPS",
breaks=c("1","2","3","4","5","6","7", "8", "9", 10),
limits=c("1","2","3","4","5","6","7", "8", "9", 10))
g
#library(ggmosaic)
#library(rcompanion)
#recodons les répondants
foo1 <- foo1 %>%
mutate(reponse=ifelse(is.na(explication), "Pas de réponse", "Réponse"))
t<-table(foo1$NPS,foo1$reponse)
chi2<-chisq.test(t)
chi<-round(chi2$statistic,2)
p<-round(chi2$p.value,3)
V<-cramerV(t, digit=3)
g1 <- ggplot(data = foo1) +
geom_mosaic(aes(x=product(NPS ,reponse), fill = NPS))+
theme(axis.text.x = element_text(angle = 45, hjust = -0.1, vjust = -0.2))+
theme(legend.position = "none")+
labs(title="Un biais négatif de réponse",
subtitle=paste0("chi2 =",chi, " p = ", p, " - V : ", V))+
scale_fill_manual(values=col)
g1
View(foo1)
t<-table(foo1$NPS,foo1$reponse)
t
t_prim<-as.data.frame(t)
View(t_prim)
View(t_prim)
t<-table(foo1$NPS,foo1$reponse)
chi2<-chisq.test(t)
#library(ggmosaic)
#library(rcompanion)
#recodons les répondants
foo1 <- foo1 %>%
mutate(reponse=ifelse(is.na(explication), "Pas de réponse", "Réponse"))
t<-table(foo1$NPS,foo1$reponse)
chi2<-chisq.test(t)
chi<-round(chi2$statistic,2)
p<-round(chi2$p.value,3)
V<-cramerV(t, digit=3)
g1 <- ggplot(data = foo1) +
geom_mosaic(aes(x=product(NPS ,reponse), fill = NPS))+
theme(axis.text.x = element_text(angle = 45, hjust = -0.1, vjust = -0.2))+
theme(legend.position = "none")+
labs(title="Un biais négatif de réponse",
subtitle=paste0("chi2 =",chi, " p = ", p, " - V : ", V))+
scale_fill_manual(values=col)
g1
corpus<-corpus(foo1,text_field ="explication")
corpus
toks <- tokens(corpus, remove_punct = FALSE)
View(toks)
toks <- tokens(corpus, remove_punct = TRUE)
View(toks)
toks <- tokens(corpus, remove_punct = TRUE, remove_numbers = TRUE)
View(toks)
toks <- tokens(corpus, remove_punct = TRUE, remove_numbers = TRUE) %>%
tokens_remove(pattern = stopwords("fr"))
View(toks)
toks <- tokens(corpus, remove_punct = TRUE, remove_numbers = TRUE) %>%
tokens_remove(pattern = stopwords("fr")) %>%
tokens_tolower()%>%
tokens_remove(pattern="botanic.*") %>%
tokens_group(groups = NPS)
dfm <- dfm(toks) %>%
dfm_trim(min_termfreq = 10, verbose = FALSE)
View(dfm)
foo<- as.data.frame(dfm)
View(foo)
toks <- tokens(corpus, remove_punct = TRUE, remove_numbers = TRUE) %>%
tokens_remove(pattern = stopwords("fr")) %>%
tokens_tolower()%>%
tokens_remove(pattern="botanic.*")
dfm <- dfm(toks) %>%
dfm_trim(min_termfreq = 10, verbose = FALSE)
foo<- as.data.frame(dfm)
View(foo)
textplot_wordcloud(dfm,comparison = TRUE, color = col)
dfm <- dfm(toks) %>%
dfm_trim(min_termfreq = 10, verbose = FALSE)
textplot_wordcloud(dfm,comparison = TRUE, color = col)
toks <- tokens(corpus, remove_punct = TRUE, remove_numbers = TRUE) %>%
tokens_remove(pattern = stopwords("fr")) %>%
tokens_tolower()%>%
tokens_remove(pattern="botanic.*") %>%
tokens_group(groups = NPS)
dfm <- dfm(toks) %>%
dfm_trim(min_termfreq = 10, verbose = FALSE)
textplot_wordcloud(dfm,comparison = TRUE, color = col)
dfm <- dfm(toks) %>%
dfm_trim(min_termfreq = 50, verbose = FALSE)
textplot_wordcloud(dfm,comparison = TRUE, color = col)
toks <- tokens(corpus, remove_punct = TRUE) %>%
tokens_group(groups = NPS)
toks <- tokens(corpus, remove_punct = FALSE) %>%
tokens_group(groups = NPS)
coloc <- textstat_collocations(toks, size = 2:4, min_count = 10) %>% filter(z>10)
View(coloc)
coloc <- textstat_collocations(toks, size = 2:4, min_count = 10)
View(coloc)
fcmat <- fcm(toks, context = "window", tri = FALSE)
fcmat <- fcm(toks, context = "window",window = 10L, tri = FALSE)
feat <- names(topfeatures(fcmat, 30))
fcm_select(fcmat, pattern = feat) %>%
textplot_network(min_freq = 0.5)
toks <- tokens(corpus, remove_punct = TRUE) %>%
tokens_group(groups = NPS)
coloc <- textstat_collocations(toks, size = 2:4, min_count = 10) %>% filter(z>15)
head(coloc, 20)
toks2 <- tokens_compound(toks, pattern = coloc) %>%
tokens_remove(pattern = stopwords("fr") )
dfm <-toks2 %>%
tokens_group(groups = NPS)%>%
dfm()
stat<- dfm %>%
textstat_frequency(n = 50,  groups = NPS)
g_b<-ggplot(stat, aes(label = feature)) +
geom_text_wordcloud(aes(size=log(frequency), color=group)) +
theme_minimal()+
facet_wrap(vars(group))+
scale_color_manual(values=col)+
labs(title="Nuage des 50 mots les plus fréquents(Par groupes",
caption = "La taille des mots est proportionnelle au log de leurs fréquences")
fcmat <- fcm(toks, context = "window",window = 10L, tri = FALSE)
feat <- names(topfeatures(fcmat, 30))
fcm_select(fcmat, pattern = feat) %>%
textplot_network(min_freq = 0.5)
toks <- tokens(corpus, remove_punct = TRUE) %>% tokens_tolower()%>%
tokens_group(groups = NPS)
coloc <- textstat_collocations(toks, size = 2:4, min_count = 10) %>% filter(z>15)
head(coloc, 20)
toks2 <- tokens_compound(toks, pattern = coloc) %>%
tokens_remove(pattern = stopwords("fr") )
dfm <-toks2 %>%
tokens_group(groups = NPS)%>%
dfm()
fcmat <- fcm(toks2, context = "window",window = 10L, tri = FALSE)
feat <- names(topfeatures(fcmat, 30))
fcm_select(fcmat, pattern = feat) %>%
textplot_network(min_freq = 0.5)
feat <- names(topfeatures(fcmat, 50))
fcm_select(fcmat, pattern = feat) %>%
textplot_network(min_freq = 0.5)
